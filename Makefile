#
# GNU makefile for 'gen-make' and 'cl' or 'clang-cl'.
#
MAKEFLAGS += --warn-undefined-variables

define Usage

  Usage: $(MAKE) CC=[cl | clang-cl]
endef

ifneq ($(CC),cl)
  ifneq ($(CC),clang-cl)
    $(error $(Usage))
  endif
endif

export CL=

OBJ_DIR = objects

CFLAGS = -nologo -MD -Z7 -W3 -O2    \
         -I.                        \
         -D_CRT_SECURE_NO_WARNINGS  \
         -D_CRT_NONSTDC_NO_WARNINGS \
         -D_CRT_SECURE_NO_DEPRECATE \
         -D_CRT_OBSOLETE_NO_WARNINGS

LDFLAGS = -nologo -debug -incremental:no

#
# A "bin/foo.exe" program built with a Makefile generated by "bin/gen-make.exe",
# in this directory checks for this. Since 'gen-make.c' here has a
# valid 'main()' do not allow it to generate any more makefiles.
#
CFLAGS += -DIN_THE_REAL_MAKEFILE

RCFLAGS = -nologo

ifeq ($(CC),clang-cl)
  CFLAGS  += -fms-compatibility
  RCFLAGS += -D__clang__
else
  CFLAGS  += -diagnostics:caret
  RCFLAGS += -D_MSC_VER
endif

SOURCES = gen-make.c       \
          getopt_long.c    \
          file_tree_walk.c \
          smartlist.c      \
          template-windows.c

OBJECTS = $(addprefix $(OBJ_DIR)/, \
            $(notdir $(SOURCES:.c=.obj)) )

all: bin/gen-make.exe bin/file_tree_walk.exe

$(OBJ_DIR) bin:
	mkdir --parents $@

bin/gen-make.exe: $(OBJECTS) $(OBJ_DIR)/gen-make.res | bin
	$(call link_EXE, $@, $^)

bin/file_tree_walk.exe: $(OBJ_DIR)/file_tree_walk_test.obj | bin
	$(call link_EXE, $@, $^)
	$(call green_msg, Test me using "bin/file_tree_walk.exe test-dir\\")
	@echo

test: bin/gen-make.exe
	$< --no-recurse > Makefile.Windows
	rm -f $(OBJ_DIR)/gen-make.obj
	$(MAKE) -f Makefile.Windows CC=$(CC)
	$(call green_msg, \nRunning $(BRIGHT_WHITE)bin/foo.exe)
	bin/foo.exe

$(OBJ_DIR)/file_tree_walk_test.obj: file_tree_walk.c | $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -DTEST -Fo./$@ $<
	@echo

$(OBJ_DIR)/%.obj: %.c | $(OBJ_DIR)
	$(CC) -c $(CFLAGS) -Fo./$@ $<
	@echo

$(OBJ_DIR)/gen-make.res: gen-make.rc | $(OBJ_DIR)
	rc $(RCFLAGS) -fo$@ $<
	@echo

clean: clean_msbuild
	rm -f link.tmp
	rm -fr $(OBJ_DIR)

clean_msbuild:
	rm -fr gen-make x64 x86

vclean: clean
	rm -f Makefile.Windows
	rm -fr bin

#
# This assumes you have CygWin/Msys's 'echo' with colour support."
#
BRIGHT_GREEN = \e[1;32m
BRIGHT_WHITE = \e[1;37m
green_msg    = @echo -e '$(BRIGHT_GREEN)$(strip $(1))\e[0m'

define link_EXE
  $(call green_msg, Linking $(1))
  link -out:$(strip $(1)) $(LDFLAGS) $(2)
  @echo
endef

$(OBJ_DIR)/file_tree_walk.obj:   file_tree_walk.c
$(OBJ_DIR)/gen-make.obj:         gen-make.c gen-make.h smartlist.h
$(OBJ_DIR)/gen-make.res:         gen-make.rc gen-make.h
$(OBJ_DIR)/getopt_long.obj:      getopt_long.c getopt_long.h
$(OBJ_DIR)/smartlist.obj:        smartlist.c smartlist.h
$(OBJ_DIR)/template-windows.obj: template-windows.c gen-make.h
